(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{297:function(e,t,n){var content=n(299);"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,n(11).default)("15328152",content,!0,{sourceMap:!1})},298:function(e,t,n){"use strict";var o=n(297);n.n(o).a},299:function(e,t,n){(t=n(10)(!1)).push([e.i,'.video-container[data-v-bec64d86]{overflow:hidden;position:relative;width:100%}.video-container[data-v-bec64d86]:after{padding-top:56.25%;display:block;content:""}.video-container iframe[data-v-bec64d86]{position:absolute;top:0;left:0;width:100%;height:100%}',""]),e.exports=t},300:function(e,t,n){"use strict";var o={transition:"page",props:{src:{type:String,required:!0,default:"https://www.youtube.com/embed/_LIz-Wbt4us"},width:{type:String,required:!1,default:"640px"},height:{type:String,required:!1,default:"360px"}}},r=(n(298),n(30)),component=Object(r.a)(o,(function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"video-container"},[t("iframe",{attrs:{frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:"",type:"text/html",width:this.width,height:this.height,src:this.src}})])}),[],!1,null,"bec64d86",null);t.a=component.exports},326:function(e,t,n){var content=n(457);"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,n(11).default)("2e8c6992",content,!0,{sourceMap:!1})},456:function(e,t,n){"use strict";var o=n(326);n.n(o).a},457:function(e,t,n){(t=n(10)(!1)).push([e.i,".article-container[data-v-7f1f82ee]{margin:25px auto;width:50%;align-items:center}.article-container[data-v-7f1f82ee],.article-content[data-v-7f1f82ee]{display:flex;flex-direction:column;justify-content:center}.article-content[data-v-7f1f82ee]{align-items:flex-start}img[data-v-7f1f82ee]{height:auto;max-width:100%;display:block;margin:0 auto;box-sizing:border-box;clear:both}@media screen and (max-width:600px){.article-container[data-v-7f1f82ee]{width:80%}.article-content img[data-v-7f1f82ee]{max-width:400px}}",""]),e.exports=t},541:function(e,t,n){"use strict";n.r(t);var o={transition:"page",components:{YouTubeEmbed:n(300).a},head:function(){return{title:this.title,titleTemplate:"Morphman Guide - %s",meta:[{charset:"utf-8"},{name:"viewport",content:"width=device-width, initial scale=1"},{hid:"description",name:"description",content:"MorphMan is an Anki add-on that keeps track of what words you know and uses that to reorder your new cards into an optimal order for learning."},{hid:"og:title",name:"og:title",content:"Morphman Guide - Mass Immersion Approach"},{hid:"og:description",name:"og:description",content:"MorphMan is an Anki add-on that keeps track of what words you know and uses that to reorder your new cards into an optimal order for learning."},{hid:"twitter:title",name:"twitter:title",content:"Morphman Guide - Mass Immersion Approach"},{hid:"twitter:description",name:"twitter:description",content:"MorphMan is an Anki add-on that keeps track of what words you know and uses that to reorder your new cards into an optimal order for learning."}]}}},r=(n(456),n(30)),component=Object(r.a)(o,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"article-container"},[n("p",[n("nuxt-link",{attrs:{to:"/table-of-contents/"}},[e._v("Table of Contents")]),e._v(" |\n    "),n("nuxt-link",{attrs:{to:"/table-of-contents/anki"}},[e._v("Anki")])],1),e._v(" "),n("h1",{staticStyle:{"text-align":"center"}},[e._v("MorphMan Addon Guide")]),e._v(" "),n("div",{staticClass:"article-content"},[n("div",{staticClass:"elementor-column-wrap  elementor-element-populated"},[n("div",{staticClass:"elementor-widget-wrap"},[n("div",{staticClass:"elementor-element elementor-element-13603d27 elementor-widget elementor-widget-text-editor",attrs:{"data-id":"13603d27","data-element_type":"text-editor.default"}},[n("div",{staticClass:"elementor-widget-container"},[n("div",{staticClass:"elementor-text-editor elementor-clearfix"},[n("div",{staticClass:"box"},[n("p",[e._v("Table of Contents")]),e._v(" "),n("ul",[n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#intro"}},[e._v("Intro")])],1),e._v(" "),n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#glossary"}},[e._v("Glossary")])],1),e._v(" "),n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#installation"}},[e._v("Installation")])],1),e._v(" "),n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#setup"}},[e._v("Setup")]),e._v(" "),n("ul",[n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#preferences"}},[e._v("Preferences")])],1),e._v(" "),n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#types"}},[e._v("Note-Types")])],1),e._v(" "),n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#frequency"}},[e._v("frequency.txt")])],1),e._v(" "),n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#recalc"}},[e._v("Recalc")])],1)])],1),e._v(" "),n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#usage"}},[e._v("Usage")]),e._v(" "),n("ul",[n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#browser"}},[e._v("In the Browser")])],1),e._v(" "),n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#repping"}},[e._v("While Repping")])],1),e._v(" "),n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#workingwith"}},[e._v("Working with the Algorithm")])],1),e._v(" "),n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#database_manager"}},[e._v("Database Manager")])],1),e._v(" "),n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#analyzer"}},[e._v("Readability Analyzer")])],1),e._v(" "),n("li",[n("nuxt-link",{staticClass:"linkx",attrs:{to:"#config"}},[e._v("config.py")])],1)])],1)])]),e._v(" "),n("h1",{attrs:{id:"intro"}},[e._v("Intro")]),e._v(" "),n("p",[e._v("\n                MorphMan is an Anki add-on that keeps track of what words you\n                know and uses that to reorder your new cards into an optimal\n                order for learning.\n              ")]),e._v(" "),n("p",[e._v("\n                You tell MorphMan which decks/cards/fields you want it to look\n                at, and it goes through and parses all the text in those\n                fields into “Morphs” (basically, words). It assumes you\n                already know all the Morphs contained within the cards you’ve\n                learned. In this way, it creates a database of your current\n                knowledge and uses that database to analyze how many unknown\n                Morphs are contained within each of your new cards.\n              ")]),e._v(" "),n("p",[e._v("\n                It then reorders your new cards based on difficulty, so that\n                you see the easiest cards (i.e., the cards with the fewest\n                number of unknown Morphs) first. MorphMan only reorders your\n                new cards; it doesn’t touch the scheduling of cards you’ve\n                already learned. You can tell MorphMan to re-analyze and\n                reorder your cards as often as you like. This allows you to\n                always learn new cards in a\n                "),n("nuxt-link",{attrs:{to:"/table-of-contents/tools/glossary/#1T"}},[e._v("1T")]),e._v("\n                fashion.\n              ")],1),e._v(" "),n("p",[e._v("\n                MorphMan is useful for use with subs2srs collections, as it\n                can do the work of finding all of the\n                "),n("nuxt-link",{attrs:{to:"/table-of-contents/tools/glossary/#1T"}},[e._v("1T sentences")]),e._v("\n                in an episode for you. It is also ideal for learning with a\n                pre-made deck alongside sentence mining, as any material\n                contained within the pre-made deck that you’ve already learned\n                through mining will automatically be skipped, saving you time.\n              ")],1),e._v(" "),n("p",[e._v("\n                In addition to its main feature of reordering cards, MorphMan\n                can also do the following:\n              ")]),e._v(" "),e._m(0),e._v(" "),n("p",[e._v("\n                Morphman was created for use with Japanese but has full\n                support for Chinese as well. MorphMan also has limited support\n                for any language written with spaces between words, and\n                languages that use CJK characters.\n              ")]),e._v(" "),n("p",[e._v("\n                Although MorphMan can be used on both Anki 2.1 and Anki 2.0,\n                this guide will focus on the Anki 2.1 port. Because the two\n                versions differ in several areas, some information in\n                this guide may not apply to the Anki 2.0 version.\n              ")]),e._v(" "),n("p",[e._v("\n                MorphMan has passed through the hands of multiple programmers\n                since its creation in 2011, and unfortunately, it’s a bit of a\n                mess in its current form. This guide is an attempt to explain\n                how MorphMan for Anki 2.1 functions as simply as possible.\n                Feel free to skip straight to\n                "),n("nuxt-link",{attrs:{to:"#installation"}},[e._v("Installation")]),e._v("\n                or "),n("nuxt-link",{attrs:{to:"#setup"}},[e._v("Setup")]),e._v(", and refer back to\n                the Glossary whenever clarification is needed.\n              ")],1),e._v(" "),n("p",[e._v("\n                The following video demonstrates how to set up the basic\n                features of MorphMan:\n              ")])])])]),e._v(" "),n("YouTubeEmbed",{attrs:{src:"https://youtube.com/embed/h2xYKx76-9s"}}),e._v(" "),n("div",{staticClass:"elementor-element elementor-element-1c247bc elementor-widget elementor-widget-text-editor",attrs:{"data-id":"1c247bc","data-element_type":"text-editor.default"}},[n("div",{staticClass:"elementor-widget-container"},[n("div",{staticClass:"elementor-text-editor elementor-clearfix"},[n("h1",{attrs:{id:"glossary"}},[e._v("Glossary")]),e._v(" "),n("h3",{attrs:{id:"1T"}},[e._v("1T Sentence")]),e._v(" "),n("p",[e._v("\n                Abbreviation for “one-target sentence”. A sentence that\n                contains one unknown word or grammar structure. The unknown\n                word or structure is referred to as the “target word” or\n                “target structure”.\n              ")]),e._v(" "),n("p",[e._v("\n                Learning through 1T sentences can be thought of as “picking\n                low-hanging fruit”. It makes the target word/structure easy to\n                understand and retain. As you continue to learn, sentences\n                that were previously one-target will become zero-target, and\n                sentences that were previously multi-target will become\n                one-target. In this way, one-target sentences can take you all\n                the way to fluency.\n              ")]),e._v(" "),n("p",[e._v("\n                You can learn more about the idea\n                "),n("nuxt-link",{attrs:{to:"/table-of-contents/tools/glossary/#1T"}},[e._v("here")]),e._v(".\n              ")],1),e._v(" "),n("h3",{attrs:{id:"morph"}},[e._v("Morph")]),e._v(" "),e._m(1),e._v(" "),n("h3",{attrs:{id:"db"}},[e._v("Database (DB)")]),e._v(" "),e._m(2),e._v(" "),n("p",[e._v("The seven databases are:")]),e._v(" "),n("ul",[e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),n("li",{attrs:{id:"priority"}},[n("strong",[e._v("priority.db")]),e._v(": manually generated using the\n                  "),n("nuxt-link",{attrs:{to:"#database_manager"}},[e._v("Database Manager")]),e._v("; cards containing Morphs in this database will be\n                  prioritized over cards that would otherwise have the same\n                  "),n("nuxt-link",{attrs:{to:"#mmi"}},[e._v("MorphMan Index")]),e._v(".\n                ")],1),e._v(" "),e._m(7),e._v(" "),n("li",[n("strong",[e._v("external.db")]),e._v(": manually generated using the\n                  "),n("nuxt-link",{attrs:{to:"#database_manager"}},[e._v("Database Manager")]),e._v("; user-managed database that tracks outside-Anki knowledge.\n                  MorphMan assumes that all Morphs in this database are\n                  mature.\n                ")],1)]),e._v(" "),n("h3",{attrs:{id:"mature"}},[e._v("Mature")]),e._v(" "),n("p",[e._v("\n                A card that has an interval of at least 21 days. Also, a Morph\n                that is contained within the specified field of a “mature”\n                card. Morphs added through “external.db” are automatically\n                counted as mature. The threshold of when a card gets counted\n                as “mature” can be changed in\n                "),n("nuxt-link",{attrs:{to:"#configedit"}},[e._v("config.py")]),e._v(".\n              ")],1),e._v(" "),n("h3",{attrs:{id:"known"}},[e._v("Known")]),e._v(" "),n("p",[e._v("\n                A card that has been reviewed. Also, a Morph that is contained\n                within the specified field of a “known” card. Same as a “seen”\n                card/Morph. The threshold of when a card gets counted as\n                “known” can be changed in\n                "),n("nuxt-link",{attrs:{to:"#configedit"}},[e._v("config.py")]),e._v(". If you\n                change the threshold from the default of 10 seconds to 24\n                hours, only cards that have graduated from the learning queue\n                will be counted as “known”, thereby differentiating “known”\n                and “seen” cards/Morphs.\n              ")],1),e._v(" "),n("h3",{attrs:{id:"seen"}},[e._v("Seen")]),e._v(" "),n("p",[e._v("\n                A card that has been reviewed. Also, a morph that is contained\n                within the specified field of a “seen” card. With the default\n                "),n("nuxt-link",{attrs:{to:"#config"}},[e._v("config.py")]),e._v("\n                settings, “seen” cards/Morphs will also be treated as “known”\n                cards, even before graduating from the learning queue.\n              ")],1),e._v(" "),n("h3",{attrs:{id:"unknown"}},[e._v("Unknown")]),e._v(" "),n("p",[e._v("A Morph that has not been “seen”.")]),e._v(" "),n("h3",{attrs:{id:"unmature"}},[e._v("Unmature")]),e._v(" "),n("p",[e._v("A Morph that is “known”, but is still not “mature”.")]),e._v(" "),n("h3",[e._v("Focus Morph")]),e._v(" "),n("p",[e._v("The unknown Morph in a sentence with one unknown Morph.")]),e._v(" "),n("h3",{attrs:{id:"mmi"}},[e._v("MorphMan Index (MMI)")]),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),n("p",[e._v("\n                In other words, cards are first sorted by\n                "),n("em",[e._v("the number of unknown Morphs they contain")]),e._v(". This means\n                that 0T cards (or what MorphMan calls “comprehension” and\n                “fresh vocab” cards) will be at the very top (although in\n                "),n("nuxt-link",{attrs:{to:"#general"}},[e._v("MorphMan Preferences")]),e._v("\n                you can tell MorphMan to always skip these cards). Then 1T\n                cards, then MT cards.\n              ")],1),e._v(" "),n("p",[e._v("\n                Cards with the same number of unknown Morphs are then further\n                sorted using a point system. The more points a card has, the\n                higher it will be sorted. Points are calculated using the\n                following criteria:\n              ")]),e._v(" "),e._m(11),e._v(" "),n("h1",{attrs:{id:"installation"}},[e._v("Installation")]),e._v(" "),e._m(12),e._v(" "),n("p",[e._v("\n                In order to keep track of what you know, MorphMan uses a\n                parsing dictionary to divide up sentences into individual\n                words. In the case of Japanese, MorphMan doesn’t come with its\n                own parsing dictionary, and the user must install one\n                separately in order for MorphMan to function. For languages\n                other than Japanese, parsing dictionaries comes pre-packaged\n                with MorphMan.\n              ")]),e._v(" "),n("p",[e._v("\n                Note: parsing dictionaries are only for parsing and can’t\n                actually be used to obtain definitions for words.\n              ")]),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),n("p",[e._v("\n                MeCab UniDic and MIA Japanese are only available for Anki 2.1,\n                so Japanese Support is the only option available to Anki 2.0\n                users.\n              ")]),e._v(" "),n("p",[e._v("\n                If you’re currently a MorphMan user who relies on either MIA\n                Japanese’s or Japanese Support’s parsing dictionary, simply by\n                installing the MeCab UniDic add-on, MorphMan will\n                automatically begin prioritizing MeCab UniDic over the others.\n                It’s important to note that\n                "),n("strong",[e._v("after upgrading to MeCab UniDic, it’s a good idea to\n                  re-generate your MorphMan database from scratch using the\n                  new dictionary")]),e._v(". In order to do this, simply delete your\n                "),n("nuxt-link",{attrs:{to:"#all.db"}},[e._v("all.db")]),e._v(" and then run\n                Recalc.\n              ")],1),e._v(" "),n("h1",{attrs:{id:"setup"}},[e._v("Setup")]),e._v(" "),e._m(15),e._v(" "),n("p",[e._v("\n                After installing MorphMan, you will find that the following\n                changes have been made to Anki:\n              ")]),e._v(" "),e._m(16),e._v(" "),n("p",[e._v("\n                Although you control most of MorphMan’s settings in\n                “Preferences”, there are some other options that are\n                controlled in “config.py”, a file that automatically gets\n                downloaded into the following directory when installing\n                MorphMan:\n                "),n("code",[e._v("C:\\Users\\[user]\\AppData\\Roaming\\Anki2\\addons21\\900801631\\morph\\config.py")]),e._v("\n                (on Anki 2.0:\n                "),n("code",[e._v("C:\\Users\\[user]\\AppData\\Roaming\\Anki2\\addons\\morph\\config.py")]),e._v("). The default config.py settings are just fine, so you don’t\n                need to mess with them if you don’t want to. But for those\n                interested, I will be explaining how to tinker with it\n                "),n("nuxt-link",{attrs:{to:"#config"}},[e._v("later in the post")]),e._v(".\n              ")],1),e._v(" "),e._m(17),e._v(" "),n("h2",{attrs:{id:"preferences"}},[e._v("MorphMan Preferences")]),e._v(" "),e._m(18),e._v(" "),n("h3",[e._v("Note Filter")]),e._v(" "),e._m(19),e._v(" "),n("p",[e._v("\n                This is where you tell MorphMan which fields of which cards\n                you want it to analyze. If you skip this step, MorphMan will\n                have nothing to work with and not function. Whenever MorphMan\n                talks about your “collection”, really it only means the\n                portions of your collection that you specify in the Note\n                Filter.\n              ")]),e._v(" "),n("p",[e._v("\n                The instructions listed are mostly self-explanatory. Note that\n                if you uncheck “Modify?”, MorphMan will analyze the specified\n                fields of cards (and update the database of learned/mature\n                Morphs based on them), but won’t actually reorder them. If\n                you’re on Windows 10, you may have to extend the entire\n                “MorphMan Preferences” windows in order for the “Modify?”\n                checkbox to appear. It may also let you type text next to the\n                checkbox, but this is simply a glitch.\n              ")]),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),e._m(22),e._v(" "),n("h3",[e._v("Extra Fields")]),e._v(" "),e._m(23),e._v(" "),n("p",[e._v("\n                MorphMan has the ability to auto-fill up to seven different\n                fields with specific information about your cards. This will\n                only apply to cards specified in the “Note Filter” tab. In the\n                “Extra Fields” tab, you can customize the names of each of\n                these seven fields. In order for MorphMan to auto-fill the\n                fields, you have to add each corresponding field to your\n                note-types.\n              ")]),e._v(" "),n("p",[e._v("\n                The “Focus Morph” field is used in other features, so it must\n                be added to your specified note-types for MorphMan to work\n                properly. The other six fields are entirely optional; if you\n                don’t want them, simply don’t add them to your note-type.\n                MorphMan will update the contents of these fields after a\n                "),n("nuxt-link",{attrs:{to:"#recalc"}},[e._v("Recalc")]),e._v(".\n              ")],1),e._v(" "),n("p",[e._v("The Six Fields are as follows:")]),e._v(" "),n("ul",[e._m(24),e._v(" "),e._m(25),e._v(" "),e._m(26),e._v(" "),e._m(27),e._v(" "),n("li",[n("strong",[e._v("MorphMan Index")]),e._v(": Detailed explanation\n                  "),n("nuxt-link",{attrs:{to:"#mmi"}},[e._v("here")]),e._v(". Roughly corresponds\n                  to the difficulty of the card. The ‘due’ time of card will\n                  be set to this value.\n                ")],1),e._v(" "),e._m(28),e._v(" "),e._m(29)]),e._v(" "),n("p",[e._v("\n                Personally, I would only add “Focus Morph” in order to keep\n                card templates as clean as possible.\n              ")]),e._v(" "),n("h3",[e._v("Tags")]),e._v(" "),e._m(30),e._v(" "),n("p",[e._v("\n                As part of the process of sorting cards based on their\n                difficult, MorphMan automatically adds and removes tags to the\n                cards you specified in the “Note Filter” tab. In the “Tags”\n                tab, you can customize the names of the different tags, as\n                well as select if you want MorphMan to add all, or only the\n                required minimum, of the possible tags to your cards.\n              ")]),e._v(" "),n("p",[e._v("The different tags are as follows:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("Vocab note")]),e._v(": Note that is\n                  "),n("nuxt-link",{attrs:{to:"/table-of-contents/tools/glossary/#1T"}},[e._v("1T")]),e._v("\n                  (contains one unknown Morph).\n                ")],1),e._v(" "),e._m(31),e._v(" "),n("li",[n("strong",[e._v("Comprehension note")]),e._v(": Note that is\n                  "),n("nuxt-link",{attrs:{to:"/table-of-contents/tools/glossary/#0T"}},[e._v("0T")]),e._v("\n                  (contains only mature Morphs).\n                ")],1),e._v(" "),n("li",[n("strong",[e._v("Not ready")]),e._v(": Note that is\n                  "),n("nuxt-link",{attrs:{to:"/table-of-contents/tools/glossary/#MT"}},[e._v("MT")]),e._v("\n                  (contains two or more unknown Morphs).\n                ")],1),e._v(" "),n("li",[n("strong",[e._v("Already k")]),n("strong",[e._v("nown")]),e._v(": A tag that\n                  you can manually add to notes to tell MorphMan that you\n                  already know all the Morphs contained in the note. After a\n                  "),n("nuxt-link",{attrs:{to:"#recalc"}},[e._v("Recalc")]),e._v(", MorphMan will\n                  add all the Morphs contained in notes with this tag to the\n                  database of Mature Morphs. “K” (for\n                  "),e._m(32),e._v(") is the hotkey for adding\n                  this tag to a card while reviewing or in the browser.\n                ")],1),e._v(" "),n("li",[n("strong",[e._v("Priority")]),e._v(": Note contains a Morph that is\n                  contained in priority.db. Will be ordered higher than Notes\n                  that would otherwise have the same\n                  "),n("nuxt-link",{attrs:{to:"#mmi"}},[e._v("MorphMan Index")]),e._v(".\n                ")],1),e._v(" "),n("li",[n("strong",[e._v("Too Short")]),e._v(": Sentence in the specified field\n                  is too short. The threshold can be edited in\n                  "),n("nuxt-link",{attrs:{to:"#configedit"}},[e._v("config.py")]),e._v(".\n                ")],1),e._v(" "),n("li",[n("strong",[e._v("Too Long")]),e._v(": Sentence in the specified field\n                  is too long. The threshold can be edited in\n                  "),n("nuxt-link",{attrs:{to:"#configedit"}},[e._v("config.py")]),e._v(".\n                ")],1),e._v(" "),e._m(33)]),e._v(" "),n("p",[e._v("\n                By unchecking the “Add tags even if not required” box, only\n                the “Vocab”, “Fresh Vocab”, “Comprehension” and “Not Ready”\n                tags will be added to cards.\n              ")]),e._v(" "),e._m(34),e._v(" "),n("p",[e._v("\n                Also note that, with the exception of the “Already known” tag,\n                manually adding tags to cards will not affect MorphMan. For\n                example, let’s say that MorphMan said a certain card is 1T,\n                but in reality, it’s MT. Even if you manually add the “Not\n                ready” tag to this card, MorphMan will simply ignore this and\n                remove the tag after the next Recalc.\n              ")]),e._v(" "),n("h3",{attrs:{id:"general"}},[e._v("General")]),e._v(" "),e._m(35),e._v(" "),n("p",[e._v("\n                Because the MorphMan Index is based on the expected difficulty\n                of cards, 0T (“comprehension”/”fresh vocab”) cards end up\n                being prioritized before 1T (“vocab”) cards. Because studying\n                0T sentences is mostly a waste of time, you are given the\n                option to have MorphMan automatically skip over\n                “comprehension” and “fresh vocab” cards, as well as “vocab”\n                cards whose\n                "),n("nuxt-link",{attrs:{to:"#focus"}},[e._v("Focus Morph")]),e._v("\n                was already studied that day. In other words, by checking off\n                all three of these boxes in the general tab, you can have\n                MorphMan only show you 1T cards.\n              ")],1),e._v(" "),e._m(36),e._v(" "),n("h2",{attrs:{id:"types"}},[e._v("Note-Types")]),e._v(" "),e._m(37),e._v(" "),n("p",[e._v("\n                Like I explained in the Extra Fields portion of the previous\n                section, you need to add (at least) the “Focus Morph” field to\n                all the note-types that MorphMan will be analyzing.\n              ")]),e._v(" "),n("h3",[e._v("MorphMan-specific CSS")]),e._v(" "),n("p",[e._v("\n                While you’re editing your note-types, there is also some\n                MorphMan-specific CSS that you can use to automatically\n                color-code sentences based on the learning status of their\n                Morphs. This MorphMan-specific CSS will only work on the\n                desktop version of Anki; on mobile, text will continue to\n                appear in its original color.\n              ")]),e._v(" "),e._m(38),e._v(" "),e._m(39),e._v(" "),e._m(40),e._v(" "),n("p",[e._v("\n                It’s also possible to use “background-color” instead of\n                “color”, in order to reserve “color” for the color-coding of\n                pitch accent. Below is our personal coloring scheme (unknown =\n                yellow, seen = orange, known = green, mature = gray):\n              ")]),e._v(" "),e._m(41),e._v(" "),e._m(42),e._v(" "),e._m(43),e._v(" "),n("p",[e._v("\n                So, in order to use the MorphMan-specific CSS in combination\n                with one of these add-ons, you will need to have two sentence\n                fields on your cards: one for displaying furigana/pitch accent\n                coloring, and another for displaying MorphMan-specific CSS:\n              ")]),e._v(" "),e._m(44),e._v(" "),e._m(45),e._v(" "),e._m(46),e._v(" "),n("p",[e._v("\n                If you still don’t see any color after adding the MorphMan\n                CSS, don’t worry. In order for it to take effect, you first\n                need to run “Recalc”, which will and have MorphMan analyze\n                your collection and create the database it will use to color\n                your cards.\n              ")]),e._v(" "),n("h2",{attrs:{id:"frequency"}},[e._v("frequency.txt")]),e._v(" "),n("p",[e._v("\n                MorphMan allows users to manually import a frequency list,\n                which MorphMan will use to prioritize cards with\n                high-frequency Focus Morphs.\n              ")]),e._v(" "),e._m(47),e._v(" "),n("p",[e._v("\n                In order for MorphMan to recognize a frequency list, it must\n                be formatted as a text file titled “frequency.txt”, which\n                contains one word on each line. Once you place a\n                “frequency.txt” file in the\n                "),n("nuxt-link",{attrs:{to:"#db"}},[e._v("database folder")]),e._v(", MorphMan will\n                automatically begin using it to sort cards next time you run\n                Recalc.\n              ")],1),e._v(" "),n("p",[e._v("\n                Please see the\n                "),n("nuxt-link",{attrs:{to:"#mmi"}},[e._v("MorphMan Index")]),e._v("\n                section to understand exactly how adding a frequency list\n                affects MorphMan’s sorting algorithm.\n              ")],1),e._v(" "),n("p",[e._v("\n                It’s important to note that there are two factors that\n                influence how heavily frequency is weighted in MorphMan’s\n                overall algorithm: “frequency weight” (a value specified in\n                "),n("nuxt-link",{attrs:{to:"#config"}},[e._v("config.py")]),e._v(") and frequency\n                list length. When frequency list length is equal, the greater\n                the “frequency weight”, the more heavily frequency will be\n                weighted in the overall algorithm. The default “frequency\n                weight” is 10, but can be changed in config.py. Additionally,\n                assuming “frequency weight” is equal, the longer the length of\n                the frequency list, the more heavily frequency will be\n                weighted in the overall algorithm.\n              ")],1),e._v(" "),n("p",[e._v("\n                Due to the way MorphMan’s algorithm is structured, if\n                frequency is weighted too heavily, cards that are too long or\n                too short (but have high-frequency Focus Morphs) could\n                potentially be ranked above cards that are the ideal length.\n                This is problematic because sentences that are excessively\n                long or short are difficult to learn from.\n              ")]),e._v(" "),n("p",[e._v("\n                In order to ensure that this doesn’t happen, we recommend\n                dividing 10,000 by your frequency list length, and setting\n                that as your “frequency weight”. For example, if you’re using\n                a frequency list that’s 1k words long, set your “frequency\n                weight” to 10 (10k / 1k = 10). If you’re using a frequency\n                list that’s 10k words long, set your “frequency weight” to 1\n                (10k / 10k = 1).\n              ")]),e._v(" "),n("p",[e._v("\n                In general, longer frequency lists are preferable, as they\n                provide more coverage. That said, it’s also important to take\n                into account the fact that longer frequency lists will make\n                running Recalc take longer.\n              ")]),e._v(" "),e._m(48),e._v(" "),e._m(49),e._v(" "),n("p",[e._v("\n                You can also use the Readability Analyzer to generate your own\n                original frequency.txt from target-language text.\n              ")]),e._v(" "),n("h2",{attrs:{id:"recalc"}},[e._v("MorphMan Recalc")]),e._v(" "),e._m(50),e._v(" "),n("p",[e._v("\n                Once you have set up “MorphMan Preferences” and configured\n                your note-types, all you have to do is run “Recalc” and you\n                are ready to go. “Recalc” stands for “recalculation”, and is\n                basically the command that tells MorphMan to work all its\n                magic. When you run Recalc, MorphMan will do the following:\n              ")]),e._v(" "),n("ul",[n("li",[e._v("\n                  Go through the specified portion of your collection and\n                  generate/update the “"),n("nuxt-link",{attrs:{to:"#all.db"}},[e._v("all.db")]),e._v("“, “"),n("nuxt-link",{attrs:{to:"#mature.db"}},[e._v("mature.db")]),e._v("“,\n                  “"),n("nuxt-link",{attrs:{to:"#known.db"}},[e._v("known.db")]),e._v("” and\n                  “"),n("nuxt-link",{attrs:{to:"#seen.db"}},[e._v("seen.db")]),e._v("” databases.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Merge the “"),n("nuxt-link",{attrs:{to:"#external.db"}},[e._v("external.db")]),e._v("” database with the four databases mentioned above.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Update MorphMan-related fields and tags, as specified in\n                  “Preferences.”\n                ")]),e._v(" "),n("li",[e._v("\n                  Reorder your new cards based on their\n                  "),n("nuxt-link",{attrs:{to:"#mmi"}},[e._v("MorphMan Index")]),e._v(".\n                ")],1)]),e._v(" "),e._m(51),e._v(" "),n("p",[e._v("\n                You can run Recalc as often as you like. It’s a good idea to\n                run it at least once a day so that your new cards will always\n                appear in the most optimal order. MorphMan will also prompt\n                you to run Recalc after closing Preferences. The hotkey for\n                Recalc is “Ctrl+M”.\n              ")]),e._v(" "),n("h1",{attrs:{id:"usage"}},[e._v("Usage")]),e._v(" "),e._m(52),e._v(" "),e._m(53),e._v(" "),n("p",[e._v("\n                After MorphMan sorts your cards, there are two main ways to\n                proceed. The first is to jump right into repping, and iron out\n                any kinks in your cards as you go. The second is to go into\n                the browser, look at your newly sorted New Card Queue, and\n                touch things up ahead of time.\n              ")]),e._v(" "),n("p",[e._v("\n                If you’re using a fully-loaded pre-made deck (which includes\n                the definitions of words), the “polish while repping” option\n                may work well. If you’re using MorphMan with subs2srs and need\n                to add definitions manually, the “polish in the browser”\n                option may be more practical.\n              ")]),e._v(" "),e._m(54),e._v(" "),e._m(55),e._v(" "),n("h2",{attrs:{id:"browser"}},[e._v("In the Browser")]),e._v(" "),n("p",[e._v("\n                The way to go about touching things up before repping is\n                pretty straightforward. Go into the browser, and for the deck\n                you want to work with, find all the new cards with the “Vocab”\n                (1T) tag.\n              ")]),e._v(" "),e._m(56),e._v(" "),n("p",[e._v("\n                By going to “Filter… > Save Current Filter…”, you can save\n                the search for easy access later.\n              ")]),e._v(" "),e._m(57),e._v(" "),n("p",[e._v("\n                Once you have pulled up all your new cards that are 1T, sort\n                them by “Due”. This will allow you to see your newly sorted\n                New Card Queue. From here, you can add definitions to cards\n                that look good, and suspend or delete cards that don’t.\n              ")]),e._v(" "),e._m(58),e._v(" "),n("p",[e._v("\n                MorphMan also adds seven new options to the “Edit” tab of the\n                browser:\n              ")]),e._v(" "),n("ul",[e._m(59),e._v(" "),e._m(60),e._v(" "),n("li",{attrs:{id:"batchplay"}},[n("strong",[e._v("MorphMan: Batch Play (Ctrl+Shift+P)")]),e._v(": Batch\n                  play all the media of the selected cards. Useful when you\n                  want to hear the same word pronounced in multiple contexts.\n                  Must add the name of the media field to\n                  "),n("nuxt-link",{attrs:{to:"#configedit"}},[e._v("config.py")]),e._v("\n                  for it to work.\n                ")],1),e._v(" "),e._m(61),e._v(" "),e._m(62),e._v(" "),e._m(63),e._v(" "),e._m(64)]),e._v(" "),n("h2",{attrs:{id:"repping"}},[e._v("While Repping")]),e._v(" "),n("p",[e._v("\n                MorphMan also has some features that make cleaning up cards on\n                the go a smooth process.\n              ")]),e._v(" "),n("p",[e._v("\n                If “Skip card if focus morph was already seen today” is\n                checked off in “MorphMan Preferences” > “General”, MorphMan\n                will continue to modify the New Card Queue while you rep to\n                ensure that you only see cards that are 1T.\n              ")]),e._v(" "),n("p",[e._v("\n                For example, let’s say there are five 1T cards, all with the\n                same Focus Morph, at the top of your New Card Queue. After you\n                learn one of those cards while repping, the other four, which\n                are now 0T, will automatically be buried. Whenever this kind\n                of reordering happens while you’re reviewing, the following\n                notice will appear:\n              ")]),e._v(" "),e._m(65),e._v(" "),n("p",[e._v("\n                Then, the next time you run Recalc, the cards that were\n                automatically buried will be officially tagged 0T.\n              ")]),e._v(" "),n("p",[e._v("\n                Obviously, you won’t be able to benefit from this feature when\n                repping on mobile. An easy way to get around this is to simply\n                manually bury any 0T cards that come up when reviewing. Let’s\n                go back to the example of having five 1T cards with the same\n                Focus Morph: after you learn the first card, the next four\n                will become 0T. On mobile, those four 0T cards will still show\n                up. By simply burying them manually, you can avoid them for\n                the time being. Then later, once you run Recalc, MorphMan will\n                automatically move them to the bottom of your New Card Queue.\n              ")]),e._v(" "),e._m(66),e._v(" "),n("p",[e._v("\n                Another possible situation is that a new 1T card comes up\n                while repping, but you think you might have a better 1T card\n                for the same Focus Morph in your deck, and you want to learn\n                that one instead. While repping, you can press the hotkey “L”\n                to open the browser and see all the other 1T cards in your\n                collection with the same Focus Morph.\n              ")]),e._v(" "),n("p",[e._v("\n                From here, you can select your preferred card, and go to “Edit\n                > MorphMan: Learn Now” (hotkey: Ctrl+Alt+N). This will\n                close the browser and make the selected card the next card you\n                will see while repping. Once you rep that card, any cards with\n                the same target morph will be automatically buried, as\n                explained above.\n              ")]),e._v(" "),n("h2",{attrs:{id:"workingwith"}},[e._v("Working with the Algorithm")]),e._v(" "),n("p",[e._v("\n                Sometimes MorphMan will say a card is 1T when it’s actually 0T\n                due to you knowing a Morph that wasn’t in your Anki\n                collection.\n              ")]),e._v(" "),e._m(67),e._v(" "),n("p",[e._v("\n                On mobile, the “K” hotkey won’t be available. Instead, one\n                option is to simply mark and bury cards manually while\n                repping. Then later, once you have access to a desktop, add\n                the “Already known” tag to all marked cards in bulk.\n              ")]),e._v(" "),n("p",[e._v("\n                There will also be times when MorphMan thinks an 0T card is 1T\n                due to incorrect parsing. Unfortunately, MorphMan isn’t that\n                smart. It’s prone to making basic mistakes like thinking two\n                different conjugations of the same word are actually two\n                unique words (not that this happens every time; in general,\n                MorphMan is pretty good with parsing conjugations).\n              ")]),e._v(" "),n("p",[e._v("\n                The good news is that the longer you use MorphMan, the more\n                data it will accumulate, and the more accurate it will become.\n                So, try not to get discouraged if it seems especially\n                mistake-prone at first. Whenever MorphMan fails to recognize a\n                known word due to incorrect parsing, simply add the “Already\n                known” tag, run Recalc, and add that specific form of the word\n                to your database.\n              ")]),e._v(" "),n("p",[e._v("\n                On the other hand, there will also be times when MorphMan says\n                a card is 1T, but you aren’t able to understand it. There are\n                two reasons this may occur. The first is that, due to\n                incorrect parsing, MorphMan thinks you know a word that you\n                don’t. Unfortunately, there is no easy way to remove a Morph\n                from MorphMan’s database. Luckily, this really shouldn’t\n                happen very often. When it does, your only real option is to\n                suspend or delete the card.\n              ")]),e._v(" "),e._m(68),e._v(" "),n("p",[e._v("\n                Whenever this happens, it’s always best to swiftly suspend or\n                delete the card and move on. The whole point of MorphMan is to\n                help you make fast progress by collecting low hanging fruit.\n                If you spend time mulling over things that are above your\n                level, you’re defeating the purpose of the add-on.\n              ")]),e._v(" "),n("h2",{attrs:{id:"database_manager"}},[e._v("MorphMan Database Manager")]),e._v(" "),n("p",[e._v("\n                The MorphMan Database Manager is a tool for manipulating\n                "),n("nuxt-link",{attrs:{to:"#db"}},[e._v("database files")]),e._v(". Its most\n                important feature is creating database files out of text\n                files. For example, let’s say you have a Japanese novel\n                formatted as a text file. You could input this text file into\n                the Database Manager, and have it output a database file with\n                all the Morphs contained in the novel.\n              ")],1),e._v(" "),n("p",[e._v("\n                If you named this database file “"),n("nuxt-link",{attrs:{to:"#external"}},[e._v("external.db")]),e._v("“, and placed it in\n                "),n("code",[e._v("C:\\Users\\[user]\\AppData\\Roaming\\Anki2\\[profile_name]\\dbs")]),e._v(", once you Recalc, MorphMan will add all of those Morphs to\n                your mature.db database. If you do a lot of learning outside\n                of MorphMan, this is a good way to catch MorphMan’s database\n                up to your current knowledge.\n              ")],1),e._v(" "),n("p",[e._v("\n                In a similar fashion, you could take the first few thousand\n                words from a frequency list, use the Database Manager to\n                convert that into a database file, name the file “"),n("nuxt-link",{attrs:{to:"#priority"}},[e._v("priority.db")]),e._v("“, and place it in the same directory as above. Then, once\n                you run Recalc, MorphMan will give high-frequency words a\n                higher "),n("nuxt-link",{attrs:{to:"#mmi"}},[e._v("MorphMan Index")]),e._v(",\n                increasing the efficiency of your learning.\n              ")],1),e._v(" "),n("p",[e._v("\n                The Database Manager is a little counter-intuitive to use, so\n                I decided to simply make a video instead of explaining\n                everything through text:\n              ")])])])]),e._v(" "),n("YouTubeEmbed",{attrs:{src:"https://youtube.com/embed/cOCisbsnYJs-9s"}}),e._v(" "),n("div",{staticClass:"elementor-element elementor-element-059821d elementor-widget elementor-widget-text-editor",attrs:{"data-id":"059821d","data-element_type":"text-editor.default"}},[n("div",{staticClass:"elementor-widget-container"},[n("div",{staticClass:"elementor-text-editor elementor-clearfix"},[n("p",[e._v("\n                The above video was created before MorphMan had\n                "),n("nuxt-link",{attrs:{to:"#frequency"}},[e._v("frequency list functionality")]),e._v(". Now that frequency lists are supported, the “priority.db”\n                feature is largely obsolete.\n              ")],1),e._v(" "),n("h3",{attrs:{id:"subs"}},[e._v("Adaptive Subs")]),e._v(" "),n("p",[e._v("\n                The Database Manager also has a feature called “Adaptive\n                Subs,” which allows you to make custom subtitles files based\n                on your personal known.db and mature.db databases. For\n                example, you could create a subtitle file that only displays\n                subs for lines that contain unknown Morphs.\n              ")]),e._v(" "),e._m(69),e._v(" "),n("h2",{attrs:{id:"analyzer"}},[e._v("Readability Analyzer")]),e._v(" "),e._m(70),e._v(" "),n("p",[e._v("\n                MorphMan’s Readability Analyzer allows users to run various\n                statistical analyses on the words contained within target\n                language texts. You can access it by going to “Tools >\n                MorphMan Readability Analyzer” on Anki’s main page.\n              ")]),e._v(" "),n("p",[e._v("\n                When inputted target-language text, the Readability Analyzer\n                has the ability to do four things:\n              ")]),e._v(" "),n("ul",[e._m(71),e._v(" "),e._m(72),e._v(" "),e._m(73),e._v(" "),n("li",[n("strong",[e._v("Frequency List")]),e._v(": outputs a frequency list\n                  that can be used as your\n                  "),n("nuxt-link",{attrs:{to:"#frequency"}},[e._v("frequency.txt")]),e._v(".\n                  Outputted in the form of a text file placed in the “Output\n                  Directory”.\n                ")],1)]),e._v(" "),n("p",[e._v("\n                By default, the Readability Analyzer will be set up for\n                Japanese. To use it with another language, you need to change\n                the “default morphemizer” (or default parsing dictionary) in\n                "),n("nuxt-link",{attrs:{to:"#default-morphemizer"}},[e._v("line 34 of config.py")]),e._v(".\n              ")],1),e._v(" "),n("p",[e._v("\n                In order to use the Readability Analyzer, first select your\n                “Input Directory”. The Readability Analyzer will analyze all\n                files contained within the folder you specify as your input\n                directory. You can have it analyze a single file, or multiple\n                files at once. It supports .txt, .ass, and .srt files encoded\n                in UTF-8. This means you can easily analyze the subtitle files\n                for a show, which can be very useful. Then load up your\n                known.db (which should be done automatically) and select where\n                you want the results outputted, and press “Analyze!”.\n              ")]),e._v(" "),n("p",[e._v("\n                If you load a “Master Frequency List” (formatted in the same\n                format as the “Word Report), when generating a “Target Study\n                Plan” and “Frequency List”, results from the files in the\n                “Input Directory” will be combined with the Master List. For\n                the “Target Study Plan”, adding a master list will change the\n                order that the words are listed in and which words are left\n                off the list; the words that appear in the list will come\n                solely from the “Input Directory”. Using a “Master Frequency\n                List” is entirely optional.\n              ")]),e._v(" "),n("h2",{attrs:{id:"config"}},[e._v("config.py")]),e._v(" "),e._m(74),e._v(" "),n("p",[e._v("\n                In the early versions of MorphMan, there was no “Preferences”\n                module inside of Anki. Instead, there was a configuration file\n                inside the add-on’s directory, which you had to open in a text\n                editor and use code to configure manually. Later down the line\n                of development, the “Preferences” module was added into Anki’s\n                interface, making it much easier for to get MorphMan setup.\n                The problem is that this “Preferences” module didn’t\n                completely replace the configuration file. MorphMan still\n                comes with a configuration file inside the add-on’s directory,\n                and there are certain settings that can only be modified by\n                manually editing this file.\n              ")]),e._v(" "),e._m(75),e._v(" "),n("h3",{attrs:{id:"configedit"}},[e._v("Editing config.py")]),e._v(" "),e._m(76),e._v(" "),e._m(77),e._v(" "),e._m(78),e._v(" "),e._m(79),e._v(" "),n("p",[e._v("\n                Once you open up config.py in your text editor of choice, here\n                is a list of the following options you can tinker with\n                (remember, some options are obsolete and don’t influence\n                MorphMan at all):\n              ")]),e._v(" "),n("ul",[n("li",{attrs:{id:"configmature"}},[e._v("\n                  Line 24:\n                  "),n("nuxt-link",{attrs:{to:"#mature"}},[e._v("Mature")]),e._v("\n                  threshold. How many "),n("em",[e._v("days")]),e._v(" a card’s interval must be\n                  before the Morphs contained in the card are considered\n                  “mature”.\n                ")],1),e._v(" "),n("li",{attrs:{id:"configknown"}},[e._v("\n                  Line 25:\n                  "),n("nuxt-link",{attrs:{to:"#known"}},[e._v("Known")]),e._v("\n                  threshold. How many "),n("em",[e._v("seconds")]),e._v(" has passed since a card\n                  was initially seen before the Morphs contained in the card\n                  are considered “known”. Once a card graduates from the\n                  learning queue, its Morphs will be considered “known”\n                  regardless of whether it has reached the threshold or not.\n                  If left at the default value of “10 seconds,” there will be\n                  no distinction between Seen and Known cards; all will be\n                  considered Known.\n                ")],1),e._v(" "),n("li",{attrs:{id:"configseen"}},[e._v("\n                  Line 26:\n                  "),n("nuxt-link",{attrs:{to:"#seen"}},[e._v("Seen")]),e._v("\n                  threshold. How many "),n("em",[e._v("seconds")]),e._v(" has passed since a card\n                  was initially seen before the Morphs contained in the card\n                  are considered “seen”.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Line 27: Text file import maturity. Default interval given\n                  to Morphs that are manually imported by the user via the\n                  "),n("nuxt-link",{attrs:{to:"#external"}},[e._v("external.db")]),e._v("\n                  database.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Line 30: Ignore grammar position. If this is set to “True”,\n                  words that can function as multiple parts of speech will all\n                  be counted as the same Morph, regardless of what part of\n                  speech they are being used as. By default, words that can\n                  function as multiple parts of speech are counted as a unique\n                  Morph for each part of speech they are being used as.\n                  Because of this, setting this option to “True” will reduce\n                  the total number of known Morphs. Delete\n                  "),n("nuxt-link",{attrs:{to:"#all.db"}},[e._v("all.db")]),e._v(" and run Recalc\n                  each time you change this setting.\n                ")],1),e._v(" "),n("li",{attrs:{id:"default-morphemizer"}},[e._v("\n                  Line 34: Default morphemizer. Controls which parsing\n                  dictionary the\n                  "),n("nuxt-link",{attrs:{to:"#analyzer"}},[e._v("Readability Analyzer")]),e._v("\n                  uses. Set to “SpaceMorphemizer” for languages with spaces\n                  between words, “CjkCharMorphemizer” for languages that use\n                  CJK characters, and “JiebaMorphemizer” for Chinese.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Line 37: Set “"),n("nuxt-link",{attrs:{to:"#browse-morphs"}},[e._v("Browse Morphs")]),e._v("” hotkey.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Line 38: Set “"),n("nuxt-link",{attrs:{to:"#already-known"}},[e._v("Already Known Tagger")]),e._v("” hotkey.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Line 39: Set “"),n("nuxt-link",{attrs:{to:"#batchplay"}},[e._v("Batch Play")]),e._v("” hotkey.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Line 40: Set “"),n("nuxt-link",{attrs:{to:"#extract"}},[e._v("Extract Morphemes")]),e._v("” hotkey.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Line 41: Set “"),n("nuxt-link",{attrs:{to:"#learn-now"}},[e._v("Learn Now")]),e._v("” hotkey.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Line 42: Set “"),n("nuxt-link",{attrs:{to:"#mass-tagger"}},[e._v("Mass Tagger")]),e._v("” hotkey.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Line 43: Set “"),n("nuxt-link",{attrs:{to:"#view"}},[e._v("View Morphemes")]),e._v("” hotkey.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Line 45: Print number of alternatives skipped. If “Skip card\n                  if focus morph was already seen today” is checked off in\n                  “MorphMan Preferences” > “General,” MorphMan will\n                  continue to reorder the New Card Queue while you rep to\n                  ensure that you only see cards that are 1T. If “Print number\n                  of alternatives skipped” is set to “True,” whenever this\n                  reordering happens while you are reviewing, a\n                  "),n("nuxt-link",{attrs:{to:"#skip"}},[e._v("small notification box")]),e._v("\n                  will briefly appear. If set to “False,” the reordering will\n                  still happen, but this notification box will not appear.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Line 50: LoadAllDb. If this is set to “False”,\n                  "),n("nuxt-link",{attrs:{to:"#all.db"}},[e._v("all.db")]),e._v("\n                  will be generate from scratch each time Recalc is run. This\n                  will make running Recalc take much longer.\n                ")],1),e._v(" "),n("li",{attrs:{id:"configbatchmedia"}},[e._v("\n                  Line 65: Batch media fields. By specifying the fields that\n                  contain audio on your cards, you can enable the\n                  "),n("nuxt-link",{attrs:{to:"#batchplay"}},[e._v("Batch Play")]),e._v("\n                  option in the browser.\n                ")],1),e._v(" "),n("li",{attrs:{id:"configmin"}},[e._v("\n                  Line 68: Min good sentence length. The minimum number of\n                  Morphs for a sentence to not be considered “too short”.\n                  Cards with sentences considered “too short” will receive a\n                  lower\n                  "),n("nuxt-link",{attrs:{to:"#mmi"}},[e._v("MorphMan Index")]),e._v(". For\n                  Japanese, a “5” may be a good minimum.\n                ")],1),e._v(" "),n("li",{attrs:{id:"configmax"}},[e._v("\n                  Line 69: Max good sentence length. The maximum number of\n                  Morphs for a sentence to not be considered “too long”. Cards\n                  with sentences considered “too long” will receive a lower\n                  "),n("nuxt-link",{attrs:{to:"#mmi"}},[e._v("Morph Man Index")]),e._v(". For\n                  Japanese, a “15” may be a good maximum. \n                ")],1),e._v(" "),n("li",[e._v("\n                  Line 70: Reinforce new vocab weight. When a card contains\n                  unmature Morphs, the amount specified here will be divided\n                  by the interval of the most mature card containing that\n                  Morph, and that amount will be subtracted from the\n                  "),n("nuxt-link",{attrs:{to:"#mmi"}},[e._v("MorphMan Index")]),e._v("\n                  of that card.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Line 71: Verb bonus. The amount specified here will be\n                  subtracted from the\n                  "),n("nuxt-link",{attrs:{to:"#mmi"}},[e._v("MorphMan Index")]),e._v("\n                  of cards that contain an unknown verb. The idea is that\n                  verbs tend to be more useful to learn than other parts of\n                  speech.\n                ")],1),e._v(" "),n("li",{attrs:{id:"configpriority"}},[e._v("\n                  Line 74: Priority.db weight. The amount specified here will\n                  be subtracted from the\n                  "),n("nuxt-link",{attrs:{to:"#mmi"}},[e._v("MorphMan Index")]),e._v("\n                  of cards that contain an unknown Morph that appears in the\n                  "),n("nuxt-link",{attrs:{to:"#priority"}},[e._v("priority.db")]),e._v("\n                  database.\n                ")],1),e._v(" "),n("li",[e._v("\n                  Line 79: Frequency weight. For cards with Morphs contained\n                  within\n                  "),n("nuxt-link",{attrs:{to:"#frequency"}},[e._v("frequency.txt")]),e._v(", the\n                  amount specified here will be multiplied by the “total\n                  number of words in frequency.txt” minus “Morph’s position in\n                  frequency.txt”, and that amount will be subtracted from the\n                  "),n("nuxt-link",{attrs:{to:"#mmi"}},[e._v("MorphMan Index")]),e._v("\n                  of the card.\n                ")],1),e._v(" "),e._m(80)])])])])],1)])])])}),[function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("\n                  Automatically add specific tags and fill specific fields to\n                  provide information about the difficulty of cards.\n                ")]),this._v(" "),t("li",[this._v("\n                  Analyze the readability of target-language texts based on\n                  your current knowledge.\n                ")]),this._v(" "),t("li",[this._v("Create frequency lists from target-language texts.")]),this._v(" "),t("li",[this._v("\n                  Edit subtitle files to show/hide words based on your current\n                  knowledge.\n                ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                Short for “morpheme.” A morpheme is “a meaningful\n                morphological unit of a language that cannot be further\n                divided (e.g. in, come, -ing, forming incoming) ["),t("a",{attrs:{href:"https://forum.koohii.com/thread-7486.html",rel:"noopener"}},[this._v("The Oxford English Dictionary")]),this._v("]”. In the context of MorphMan, a Morph is basically a word.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                A list of Morphs, which are saved in a “.db” file. MorphMan\n                uses seven different databases to keep track of what you know\n                and how well you know it. Four of the seven are necessary for\n                MorphMan to function and are generated automatically. The\n                other two are for additional features and must be manually\n                created by the user. All seven databases go in the following\n                directory:\n                "),t("code",[this._v("C:\\Users\\[user]\\AppData\\Roaming\\Anki2\\[profile_name]\\dbs")]),this._v(".\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",{attrs:{id:"all.db"}},[t("strong",[this._v("all.db")]),this._v(": automatically generated; contains\n                  all Morphs contained within specified fields + all Morphs\n                  that have been imported from external.db.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",{attrs:{id:"mature.db"}},[t("strong",[this._v("mature.db")]),this._v(": automatically generated;\n                  contains all mature Morphs.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",{attrs:{id:"known.db"}},[t("strong",[this._v("known.db")]),this._v(": automatically generated; contains\n                  all known Morphs.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",{attrs:{id:"seen.db"}},[t("strong",[this._v("seen.db")]),this._v(": automatically generated; contains\n                  all seen Morphs.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",[this._v("frequency.txt")]),this._v(": manually generated;\n                  functions as a frequency list. Cards with Morphs positioned\n                  higher on this list will be prioritized over cards with\n                  Morphs positioned lower.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                MorphMan sorts your cards in accordance with their MorphMan\n                Index. MorphMan Index is based on the\n                "),t("em",[this._v("number of unique unknown Morphs")]),this._v(", the\n                "),t("em",[this._v("length")]),this._v(" of the sentence, and the\n                "),t("em",[this._v("usefulness score")]),this._v(" of the unknown Morphs.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                The formula is: "),t("br"),t("code",[this._v("MMI = (100,000*N_k) + (1,000*lenDiff ) + (99,999 - min(\n                  99,999 , usefulness ))")]),this._v(", where:\n              ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("MMI = MorphMan Index")]),e._v(" "),n("li",[e._v("N_k = number of unique unknown Morphs")]),e._v(" "),n("li",[e._v("\n                  lenDiff = min( 9, length_of_sentence over ‘max good sentence\n                  length’ or under ‘min good sentence length’ )\n                ")]),e._v(" "),n("li",[e._v("\n                  usefulness =\n                  "),n("ul",[n("li",[e._v("\n                      ‘frequency.txt weight scale’*(frequency_len –\n                      frequency_index) +\n                    ")]),e._v(" "),n("li",[e._v("priority_weight +")]),e._v(" "),n("li",[e._v("verb_bonus +")]),e._v(" "),n("li",[e._v("avg_freq_of_focus_morpheme_in_all_cards +")]),e._v(" "),n("li",[e._v("reinforce_weight")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("\n                  Cards with sentences that are too long or too short are\n                  penalized. For each Morph under the “minimum good sentence\n                  length” or above the “maximum good sentence length”, 1,000\n                  points are deducted. There is a maximum penalty of 9,000. By\n                  default, the “minimum good sentence length” is 2 and the\n                  “maximum good sentence length” is 8. This can be changed in\n                  config.py.\n                ")]),e._v(" "),n("li",[e._v("\n                  Cards with unknown Morphs contained in frequency.txt are\n                  boosted proportionally to how high their position is in\n                  frequency.txt. The formula for determining the boost is, for\n                  each unknown Morph contained in frequency.txt, “‘total\n                  number of words in frequency.txt’ minus ‘position in\n                  frequency.txt’, times ‘frequency weight'”. The default the\n                  “frequency weight” is 10. This can be changed in config.py.\n                ")]),e._v(" "),n("li",[e._v("\n                  Cards with Morphs contained in priority.db are boosted. By\n                  default, for each unknown Morph contained in priority.db,\n                  200 points are added. This amount can be changed in\n                  config.py.\n                ")]),e._v(" "),n("li",[e._v("\n                  If at least one of the unknown Morphs in a card is a verb,\n                  the card is given a flat boost. By default, the boost is 100\n                  points. This amount can be changed in config.py.\n                ")]),e._v(" "),n("li",[e._v("\n                  Cards are boosted proportionally to how frequently their\n                  unknown Morphs show up within the portion of your Anki\n                  collection that MorphMan looks at. By default, for every\n                  occurrence of the unknown Morph in your collection, 5 points\n                  are added. This can be changed in config.py. If a card\n                  contains multiple unknown Morphs, the boost is calculated\n                  using the average number of occurrences of each unknown\n                  Morph.\n                ")]),e._v(" "),n("li",[e._v("\n                  Cards with unmature (“known” but not yet “mature”) Morphs\n                  are boosted. The boost is calculated by dividing the\n                  “reinforce new vocab weight” by the interval of the most\n                  mature card containing that Morph. For Morphs whose most\n                  mature card has an interval of less than 1 day, .5 is used\n                  in place of the interval. If a card contains multiple\n                  unmature Morphs, the points for each Morph are added up. The\n                  default “reinforce new vocab weight” is set to 5. This can\n                  be changed in config.py.\n                ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                You can download MorphMan for Anki 2.1\n                "),t("a",{attrs:{href:"https://ankiweb.net/shared/info/900801631",rel:"noopener"}},[this._v("here")]),this._v(". The Anki 2.0 version can be found\n                "),t("a",{attrs:{href:"https://github.com/kaegi/MorphMan",rel:"noopener"}},[this._v("here")]),this._v(".\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                The most advanced Japanese parsing dictionary currently\n                available for MorphMan is the MeCab UniDic dictionary, which\n                you can add to MorphMan simply by installing\n                "),t("a",{attrs:{href:"https://ankiweb.net/shared/info/13462835",rel:"noopener"}},[this._v("this add-on")]),this._v(". Once the add-on is installed, simply restart Anki and\n                MorphMan will automatically start using MeCab UniDic for\n                parsing.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                The\n                "),t("a",{attrs:{href:"https://ankiweb.net/shared/info/278530045",rel:"noopener"}},[this._v("MIA Japanese")]),this._v("\n                or\n                "),t("a",{attrs:{href:"https://ankiweb.net/shared/info/3918629684",rel:"noopener"}},[this._v("Japanese Support")]),this._v("\n                add-ons also come with pre-packaged Japanese parsing\n                dictionaries. If either one of these is installed, MorphMan\n                will be able to use their parsing dictionary to function. It’s\n                important to note that the dictionaries packaged with MIA\n                Japanese and Japanese Support are not as advanced as MeCab\n                UniDic, and will produce inferior parsing results.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/k0.png.png",alt:"",width:"400",height:"85"}})])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("\n                  There is now “"),n("em",[e._v("K0V0")]),e._v("” to the right of the “Sync”\n                  button. It looks like a button, but it’s not. The 0’s to the\n                  right of the “K” and “V” represent how many Morphs you know.\n                  It can be motivating to watch these numbers increase over\n                  time. For languages other than Japanese, the two numbers\n                  will always be the same; for Japanese, they will slightly\n                  differ.\n                ")]),e._v(" "),n("li",[e._v("\n                  The “K” stands for "),n("em",[n("strong",[e._v("K")]),e._v("nown")]),e._v(", and is\n                  the most accurate representation of how many unique Morphs\n                  you know. For example, 余り, あまり, あんま, and あんまり\n                  will all be counted as the same Morph. The “V” stands for\n                  "),n("em",[n("strong",[e._v("V")]),e._v("ariation")]),e._v(". For Japanese, it tends\n                  to count different forms (or orthography\n                  "),n("em",[n("strong",[e._v("V")]),e._v("ariations")]),e._v(") of the same word as\n                  unique Morphs. For example, 余り, あまり, あんま, and\n                  あんまり will all be counted as different Morphs. Because of\n                  this, the “V” count will be artificially larger than your\n                  true number of unique known Morphs.\n                ")]),e._v(" "),n("li",[e._v("\n                  Seven new options under “Edit” tab in the browser:\n                  “MorphMan: View Morphemes”, “MorphMan: Extract Morphemes”,\n                  “MorphMan: Batch Play”, “MorphMan: Mass Tagger”, “MorphMan:\n                  Learn Now”, “MorphMan: Browse Morphs”, and “MorphMan:\n                  Already Known Tagger.” What each of these features does will\n                  be explained later in the guide.\n                ")]),e._v(" "),n("li",[e._v("\n                  Four new options in the “Tools” menu: “MorphMan Recalc”,\n                  “MorphMan Preferences”, “MorphMan Database Manager”, and\n                  “MorphMan Readability Analyzer.” All you really need to\n                  worry about “Recalc” and “Preferences.” “Preferences” is\n                  where you configure everything, and “Recalc” is kind of like\n                  the “go!” button. “Database Manager” has some useful\n                  features, but isn’t crucial to MorphMan’s main functions;\n                  all the important components of database management are done\n                  for you automatically. “Readability Analyzer” lets you test\n                  how comprehensible texts are likely to be based on how many\n                  known and unknown words they contain.\n                ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                All of this might sound very complicated at first, but\n                really,"),t("strong",[this._v("\n                  all you need to get started is to configure “Preferences”,\n                  make a small adjustment to your note-types, and then run\n                  “Recalc.”")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/preferences1.png",alt:"",width:"400",height:"119"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/preferences_note_filter4.png",alt:"",width:"700",height:"359"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/note-filter-order.png",alt:"",width:"700",height:"352"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                It’s important to note that if you have overlapping filters,\n                whichever filter is listed first will take priority (hence the\n                “Up” and “Down” buttons). For example, in the picture above,\n                "),t("em",[this._v("no")]),this._v(" cards with the “MIA Japanese” note type will be\n                reordered, because the first filter, which takes priority,\n                encompasses "),t("em",[this._v("all")]),this._v(" “MIA Japanese” cards (and leaves\n                “Modify?” unchecked).\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                In this example, in order to make “MIA Japanese” cards\n                "),t("em",[this._v("with")]),this._v(" the “Tango” tag be reordered, and “MIA Japanese”\n                cards "),t("em",[this._v("without")]),this._v(" the tag only be analyzed, the order of\n                the two filters must be switched.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/preferences_extra_fields2.png",alt:"",width:"700",height:"359"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",[this._v("Focus Morph")]),this._v(": The unknown Morph in sentences\n                  with one unmature Morph. Cleared once all Morphs are mature.\n                  If a card is not 1T, this field will be left blank.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",[this._v("Unmatures")]),this._v(": Comma-separated list of unmature\n                  Morphs.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",[this._v("Unknowns")]),this._v(": Comma-separated list of unknown\n                  Morphs.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",[this._v("Unknown Frequency")]),this._v(": Average of how many\n                  times the unknown Morphs appear in the specified portion of\n                  your collection.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",[this._v("Unmatures Count")]),this._v(": Number of unmature Morphs\n                  on this note.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",[this._v("Unknown Count")]),this._v(": Number of unknown Morphs on\n                  this note.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/preferences_tags1.png",alt:"",width:"700",height:"359"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",[this._v("Fresh vocab note")]),this._v(": Note that contains no\n                  unknown Morphs, but one or more unmature Morphs.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("em",[t("strong",[this._v("K")]),this._v("nown")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",[this._v("Frequency")]),this._v(": Note contains a Morph that is\n                  contained in frequency.txt.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                Note that, although MorphMan will only ever change the\n                "),t("em",[this._v("scheduling")]),this._v(" of new cards, tags will still be added to\n                cards you’ve already learned. This means that, for example,\n                the “Comprehension” tag will be added to cards you know,\n                signifying that they are 0T. But this doesn’t mean that those\n                cards will be skipped when you review. Only "),t("em",[this._v("new")]),this._v(" cards\n                with the “Comprehension” tag will be skipped.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/preferences_general1.png",alt:"",width:"700",height:"359"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                “Ignore everything contained within [] brackets” is an option\n                intended for use with the\n                "),t("a",{attrs:{href:"https://ankiweb.net/shared/info/278530045",rel:"noopener"}},[this._v("MIA Japanese")]),this._v("\n                add-on. MIA Japanese adds readings and pitch accents directly\n                into the fields of cards in the form of a simple syntax\n                involving brackets. For example, if readings and pitch accents\n                were generated for “走る”, it would appear as “走[はし;k2]る”\n                in the field. In order for MorphMan to correctly identify this\n                as “走る”, it must ignore brackets and the contents of\n                brackets. So, make sure to check this box if you’re using the\n                MIA Japanese add-on.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{staticClass:"aligncenter",attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/note-type_target.gif",alt:"",width:"600",height:"486"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/note-type_color1.png",alt:"",width:"700",height:"427"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                To add the MorphMan-specific CSS, in one of the HTML sections,\n                choose which field you want to add color-coding to, and add\n                "),t("code",[this._v("morphHighlight:")]),this._v(" inside of the curly brackets,\n                before the field name. Then, add the following to the bottom\n                of the CSS section:\n              ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("code",[e._v("[mtype=unknown] { color: red; }")]),e._v(" "),n("br"),n("code",[e._v("[mtype=seen] { color: orange; }")]),e._v(" "),n("br"),n("code",[e._v("[mtype=known] { color: green; }")]),e._v(" "),n("br"),n("code",[e._v("[mtype=mature] { color: blue; }")]),e._v(" "),n("br"),n("code",[e._v("[priority=true] { text-decoration: underline; }")]),e._v(" "),n("br"),n("code",[e._v("[frequency=true] { text-decoration: underline; }")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("code",[this._v("[mtype=unknown] { background-color: #ffff99; }")]),this._v(" "),t("br"),t("code",[this._v("[mtype=seen] { background-color: #ffd1b3; }")]),this._v(" "),t("br"),t("code",[this._v("[mtype=known] { background-color: #b3e6cc; }")]),this._v(" "),t("br"),t("code",[this._v("[mtype=mature] { background-color: #f2f2f2; }")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                Unfortunately,\n                "),t("strong",[this._v("the MorphMan-specific CSS is not compatible with the\n                  Japanese Support add-on’s “furigana” feature or any of the\n                  MIA Japanese add-on’s display types")]),this._v(".\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/css-with-mia-japanese.gif",alt:"",width:"800",height:"419"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/css-two-fields1.png",alt:"",width:"700",height:"288"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                Because of this hassle,\n                "),t("strong",[this._v("we recommend simply not bothering with the\n                  MorphMan-specific CSS")]),this._v(". Instead, consider having the “Target” field displayed on\n                the back of your cards, so you can be sure what the target\n                word of the sentence is.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                If you do choose to use the MorphMan-specific CSS, we\n                recommend only putting it on the "),t("em",[this._v("back")]),this._v(" of cards. The\n                reason for this is that, in order to get the best results, you\n                want your SRS experience to simulate real life as much as\n                possible. When reading in real life, you aren’t going to be\n                told which words you know and which you don’t. So, it makes\n                sense to have your sentence cards reflect this.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/morphman-freqtxt1.png",alt:"",width:"175",height:"251"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/morphman-freq-config.png",alt:"",width:"600",height:"125"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                You can download a 20k word frequency.txt for Japanese\n                "),t("a",{attrs:{href:"https://www.mediafire.com/file/wdsca3u3xsyjw7r/frequency.txt/file",rel:"noopener"}},[this._v("here")]),this._v(". You can download a 20k word frequency.txt for Chinese\n                "),t("a",{attrs:{href:"https://www.mediafire.com/file/3yvegfbq85zdtgd/frequency.txt/file",rel:"noopener"}},[this._v("here")]),this._v(". The Japanese list was created from all of the Japanese\n                subtitles on Netflix, and the Chinese list was created from\n                the\n                "),t("a",{attrs:{href:"https://www.plecoforums.com/threads/word-frequency-list-based-on-a-15-billion-character-corpus-bcc-blcu-chinese-corpus.5859/",rel:"noopener"}},[this._v("BLCU Chinese Corpus frequency list")]),this._v(". When using these frequency lists, set your “frequency\n                weight” to .5.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/recalc2.gif",alt:"",width:"400",height:"209"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                Basically, after learning 1T cards in a repping session, cards\n                that were previously 1T will have become 0T, and cards that\n                were previously MT will have become 1T. When you run Recalc,\n                MorphMan will go through your collection, recalculate the\n                difficulty of your cards based on your new knowledge, and\n                reorder your new cards in a way that’s optimal for the\n                "),t("em",[this._v("new you")]),this._v(": the you who knows more than you did\n                yesterday.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                MorphMan works by reordering your New Card Queue, so make sure\n                that “Show new cards in order added” is selected in the New\n                Cards tab of your option group settings. Although the setting\n                is called “Show new cards in "),t("em",[this._v("order added")]),this._v("“, it really\n                means “show new cards in the order of the New Card Queue.” If\n                you select the other option, “Show new cards in random order”,\n                you will bypass the New Card Queue and render MorphMan\n                useless.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/new-cards-in-order-added1.png",alt:"",width:"400",height:"404"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("If you mainly do your reps on AnkiWeb, Anki Mobile, or\n                  AnkiDroid, the “polish on the go” option will be very\n                  limited.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                The\n                "),t("a",{attrs:{href:"https://youtu.be/tM3yDVN9cBQ?t=138",rel:"noopener"}},[this._v("MIA Dictionary add-on")]),this._v("\n                allows you to automate the process of adding definitions to 1T\n                cards. This makes the “polish while repping” option much more\n                viable for use with subs2srs decks as well. Currently, the MIA\n                Dictionary add-on is in the beta stage of development, and is\n                only available to\n                "),t("a",{attrs:{href:"https://www.patreon.com/massimmersionapproach",rel:"noopener"}},[this._v("MIA patrons")]),this._v(". The add-on should be freely availed to the public within a\n                few months.\n              ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("\n                  “deck:"),n("em",[e._v("deck name")]),e._v("” is the syntax for finding cards in\n                  a specific deck (if the deck name contains spaces, the whole\n                  thing needs to be in quotations).\n                ")]),e._v(" "),n("li",[e._v("“is:new” is the syntax for finding new cards.")]),e._v(" "),n("li",[e._v("\n                  “tag:"),n("em",[e._v("TagName")]),e._v("” is the syntax for finding cards with\n                  a given tag.\n                ")]),e._v(" "),n("li",[e._v("\n                  “-is:suspended” is the syntax to exclude suspended cards.\n                ")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/before-repping1.png",alt:"",width:"800",height:"592"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/browser-edit2.png",alt:"",width:"400",height:"367"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",{attrs:{id:"view"}},[this._v("MorphMan: View Morphemes (Ctrl+Shift+V)")]),this._v(": Brings up pop-up window showing the Morphs contained in\n                  the selected cards. Will use the field specified in the\n                  “Note Filter” tab of Preferences. If no field is specified,\n                  the first field of the card will be used.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",{attrs:{id:"extract"}},[this._v("MorphMan: Extract Morphemes (Ctrl+Shift+E)")]),this._v(": Extracts Morphs from selected cards and lets you save\n                  them to a .db file. Will use the field specified in the\n                  “Note Filter” tab of Preferences. If no field is specified,\n                  the first field of the card will be used.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",{attrs:{id:"mass-tagger"}},[this._v("MorphMan: Mass Tagger (Ctrl+Shift+T)")]),this._v(": Allows you to add specific tags to all cards whose\n                  specified field contains a Morph found in a specified .db\n                  file (for example, add the tag “"),t("em",[this._v("TagName")]),this._v("” to all\n                  selected cards that contain a Morph found in\n                  "),t("em",[this._v("filename")]),this._v(".db).\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",{attrs:{id:"learn-now"}},[this._v("MorphMan: Learn Now (Ctrl+Shift+N): Raises selected cards\n                    to the top of the learning queue.")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",{attrs:{id:"browse-morphs"}},[this._v("MorphMan: Browse Morphs (L)")]),this._v(": Brings up all of the 1T cards that have the same Focus\n                  Morph as the selected card. By using the hotkey “L”, this\n                  feature can also be used while repping.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",{attrs:{id:"already-known"}},[this._v("MorphMan: Already Known Tagger (K)")]),this._v(": Add’s the “Already known” tag to the selected cards. By\n                  using the hotkey “K” (for "),t("em",[t("strong",[this._v("K")]),this._v("nown")]),this._v("),\n                  this feature can also be used while repping. When used while\n                  repping, the card will also be buried.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{id:"skip",src:"https://massimmersionapproach.com/imgs/2019/01/reorder.png",alt:"",width:"350",height:"149"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/morphman-learn-now.gif",alt:"",width:"700",height:"577"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                If you come across one of these cards while repping, use the\n                hotkey “K” (for "),t("em",[t("strong",[this._v("K")]),this._v("nown")]),this._v(") to add the\n                “Already known” tag to the card and bury it. When you do this,\n                any other cards with the same Focus Morph will automatically\n                be buried as well. Next time you run Recalc, MorphMan will add\n                all the Morphs contained in the card to your mature database.\n                You can also use the hotkey “K” to add the “Already known” tag\n                to cards in the browser as well.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                The other, much more likely scenario is that you still aren’t\n                able to understand a sentence deemed 1T despite it indeed\n                containing only one unknown word. This is simply a fact of\n                life when it comes to language learning. Sometimes you know\n                "),t("em",[this._v("all")]),this._v(" the words in a sentence, but still just can’t get\n                what it means. It could be due to many things, such as one of\n                the words having an alternate meaning you haven’t learned yet,\n                or the grammar being too tricky for you parse at your current\n                level. Basically, although the sentence "),t("em",[this._v("appears")]),this._v(" to be\n                1T, it’s actually MT. By definition, any sentence that’s truly\n                1T shouldn’t be difficult to understand.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                The feature is a bit of a hassle to set up and use and doesn’t\n                provide much practical value. If you would like to give it a\n                shot anyway, you can find an explanation of how to use the\n                feature\n                "),t("a",{attrs:{href:"http://rtkwiki.koohii.com/wiki/Morph_Man#What_are_adaptive_subs.3F",rel:"noopener"}},[this._v("here")]),this._v(". Note that in the current version of MorphMan, “target” must\n                be used in place of “jpn”, and “native” must be used in place\n                of “eng”.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/09/morphman-readability-analyzer.png",alt:"",width:"700",height:"421"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",[this._v("Readability Report")]),this._v(": tell you what\n                  percentage of words contained in the text you already know\n                  (or to be exact, what percentage of the words are considered\n                  Mature Morphs in your MorphMan database). The Readability\n                  Report is outputted within the “Readability Analyzer”\n                  window. Whether the “Readability Report” box is checked off\n                  doesn’t change anything in the current version of MorphMan.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",[this._v("Word Report")]),this._v(": outputs a list of all the\n                  words contained within the text, along with various\n                  information such as their part of speech and number of\n                  occurrences within the text. Outputted in the form of a text\n                  file placed in the “Output Directory”.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[t("strong",[this._v("Target Study Plan")]),this._v(": outputs a list of the\n                  words, ordered by frequency, that you would need to learn to\n                  reach the “Target %” percentage of known words contained\n                  within the text. Outputted in the form of a text file placed\n                  in the “Output Directory”.\n                ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                I said in the introduction to this post that MorphMan has\n                passed through the hands of multiple programmers, and due to\n                this is a bit of a mess. The configuration file,\n                "),t("em",[this._v("config.py")]),this._v(", is where this becomes the most apparent.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                Recall that, originally, the configuration file was used to\n                control "),t("em",[this._v("all")]),this._v(" of MorphMan’s settings. Which\n                decks/note-types/fields you want MorphMan to look through,\n                what tags you want MorphMan to add, etc., was all configured\n                through this file. Even though that "),t("em",[this._v("most")]),this._v(" of these\n                settings are now controlled with Preferences inside of Anki,\n                when you open up the configuration file, the old options to\n                edit these things are still there. This means that a portion\n                of the options you will find in the configuration file are\n                completely obsolete in the current version of MorphMan.\n                Changing them won’t have any effect; they will simply be\n                overwritten by whatever is specified in Preferences.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                If you are using Anki 2.1, config.py can be found in\n                "),t("code",[this._v("\n                  C:\\Users\\[user]\\AppData\\Roaming\\Anki2\\addons21\\900801631\\morph\\config.py")]),this._v(". In Anki 2.0, it can be found in\n                "),t("code",[this._v("\n                  Anki 2.0:\n                  C:\\Users\\[user]\\AppData\\Roaming\\Anki2\\addons\\morph\\config.py")]),this._v(".\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                If you mess up your config.py and need to start fresh, you can\n                find a copy of the default settings\n                "),t("a",{attrs:{href:"https://raw.githubusercontent.com/landonepps/MorphMan21/master/morph/config.py",rel:"noopener"}},[this._v("here")]),this._v(".\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("\n                Code editors with like\n                "),t("a",{attrs:{href:"https://notepad-plus-plus.org/",rel:"noopener"}},[this._v("Notepad++")]),this._v("\n                or\n                "),t("a",{attrs:{href:"https://www.sublimetext.com/",rel:"noopener"}},[this._v("Sublime Text")]),this._v("\n                have\n                "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Syntax_highlighting",rel:"noopener"}},[this._v("syntax highlighting")]),this._v(", which makes viewing and editing config.py much easier. But\n                ultimately any text editor will do.\n              ")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://massimmersionapproach.com/imgs/2019/02/config.py_.png",alt:"",width:"500",height:"220"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("li",[this._v("\n                  Line 82: Only update k+2 and below. If this option is set to\n                  “True,” cards that contain "),t("em",[this._v("more")]),this._v(" than two unknown\n                  morphs won’t be sorted by MorphMan. This reduces how many\n                  notes are changed after a Recalc by not updating notes that\n                  aren’t as important, in return reducing the sync burden.\n                ")])}],!1,null,"7f1f82ee",null);t.default=component.exports}}]);